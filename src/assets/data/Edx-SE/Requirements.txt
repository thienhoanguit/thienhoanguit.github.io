Welcome to Requirements.
After watching this video, you will be able to:
Describe the steps of the requirement gathering process.
Explain the purpose of a User Requirement Specification, or URS, document.
Explain the purpose of a Software Requirement Specification, or SRS, document, and
Explain the purpose of a System Requirement Specification, or SysRS, document
Requirement gathering is a six-step process of defining a problem to
be solved and documenting how to go about solving that problem. These steps include:
identifying stakeholders,
establishing goals and objectives,
eliciting requirements from the stakeholders,
documenting the requirements,
analyzing and confirming the requirements, and
prioritizing.
Generally, the stakeholders work for the organization that
requests the development of the software product.
Key personnel from the organization may include
decision-makers,
end-users,
system administrators,
engineering,
marketing,
sales,
and customer support personnel.
It is good to have a representative from every group that the product affects.
The goals of the product should be clearly defined.
Goals are broad, long-term achievable outcomes.
Goals can include customer outcomes and business goals.
Next, objectives should be identified. Objectives are more specific than goals
and they are actionable and measurable actions that achieve the stated goals.
The next three steps, eliciting, documenting,
and requirement confirmation are usually completed iteratively.
Elicitation can be accomplished through
surveys,
questionnaires,
and interviews. As the requirements emerge, they should be
documented and checked to ensure they
align with the goals and objectives.
Documented requirements should be easily understood by stakeholders and the project team.
In order to confirm the requirements,
they should be analyzed to ensure consistency,
clarity,
and completeness. After analysis, the requirements should be shared with
and approved by the stakeholders.
After confirmation, requirements should be prioritized. Labels such as
“must-have,”
“highly desired,”
and “nice to have” are helpful. If possible, order the requirements within those categories.
Typically, there may be three documents that result from the requirements gathering process:
software requirements specification, or SRS,
user requirements specification, or URS,
and system requirements specification,
or SysRS. The most common of these is the software requirements specification.
The software requirements specification, or SRS,
is a document that captures the functionalities that the software should perform
and also establishes benchmarks or service levels for its performance.
Parts of an SRS include:
A purpose statement that contains
the intended use of the SRS,
its audience and
scope,
constraints, assumptions and dependencies, and
requirements, which can be sorted into four categories:
Functional requirements
External Interface requirements
System Features
Non-functional requirements
The product’s purpose describes
who will have access to the SRS and
how they should use it.
The scope describes
the benefits of the software,
its goals, and
objectives.
The second part of the SRS should detail constraints, assumptions, and dependencies.
Constraints describe how the product must operate under given conditions that may
limit options in the design phase such as conformation to standards or hardware limitations.
Assumptions may include things like a required
operating system or hardware that is needed by the software to function.
Dependencies on other software products should also be noted.
Requirements can be classified into four categories.
Functional requirements are those that cover the functionalities of the software.
External requirements are the requirements that address the behavior of the software
in relation to external entities such as users and interactions with other hardware or software.
System features are a subset of functional requirements.
These are required features for the system to function.
There are also non-functional requirements such as specifying performance,
safety, security, and quality standards.
User requirements describe the business need and expectations
of the end-users from the software system.
The user requirements are written as “user stories” or
“use cases” that answer three questions:
Who is the user?
What is the function that needs to be performed?
Why does the user want this functionality?
User acceptance testing determines if these requirements have been met.
Often though, the user requirements and software requirements are combined
into a single SRS document. The SRS details the expectations of the software system.
The System Requirement Specification document, or SysRS, to differentiate it from
the SRS, clearly outlines the requirements of an entire system. The system requirement
specification is often used interchangeably with software requirement specification,
but the SysRS is actually broader in scope than the SRS.
Many software projects develop an SRS rather than a SysRS.
The SysRS contains
system capabilities,
interfaces, and user characteristics. It also may include
policy requirements,
regulation requirements,
personnel requirements,
performance requirements,
security requirements,
and system acceptance criteria.
It also outlines expectations of the hardware needed for the system
in addition to software requirements.
In this video you learned that:
The requirement gathering process entails identifying stakeholders, establishing
goals and objectives, and eliciting, documenting, confirming, and then prioritizing requirements.
The SRS documents functional, external, system, and non-functional requirements.
The URS documents user stories.
And finally, the SysRS documents system capabilities and acceptance criteria,
and policy, regulation, personnel, performance, security, and hardware requirements.