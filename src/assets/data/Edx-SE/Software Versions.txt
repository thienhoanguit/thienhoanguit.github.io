Welcome to Software Versions
After watching this video, you will be able to:
Discuss software versions on computing platforms,
And identify software versions and numbering.
Software versions tell us a lot about programs and applications.
Users can determine what software version they are using, and developers can provide
useful information with version numbers.
Software version numbers vary in length and meaning; however, most version numbers follow
a similar format and represent similar information.
Version numbers indicate when the software was released, when it was updated, and if
any minor changes or patches were made to the software.
Software versioning is how software developers keep track of new software, updates, and patches
for programs and applications.
Version numbers can be displayed in several ways.
Version numbers can be short or long, depending on the software and the preference of the
developer, with 2, 3, or 4 number sets.
Each number set is divided by a period.
The first release of an application or program might have a 1.0 as the version number to
indicate no updates, patches, or fixes to the software.
Note: A version still in beta or testing could have a version number lower than 1, such as
0.9.
A program or application with many releases and updates will have a longer number, sometimes
4 different number sets within the version number
Some software developers may use dates for their versioning.
For example: Ubuntu Linux version 18.04.2 was released in 2018 April.
The third number set, point-2, designates an additional change or update.
What do these numbers mean?
Some version numbers follow the semantic numbering system and have 4 parts separated by a period,
but not all numbering systems follow this 4-part example.
In semantic numbering , the first number indicates major changes to the software, such as a new
release.
The second number indicates that minor changes were made to the software.
The third number in the version number indicates patches or minor bug fixes.
Finally, the fourth number indicates a build number or a build date, and it can indicate
less significant changes made.
Software version numbers are identified in the About or Help section of software.
You can practice identifying your version number in a web browser.
This example illustrates how to view the version number in the Google Chrome desktop web browser;
however, if you are using a different web browser, you should be able to follow the
same or similar steps.
To view the browser version:
First, select the three dots or three lines in the top-right corner of your browser.
Next, select the menu item “Help.”
Then, select “About” to view the version information.
The version of your web browser will display.
Are newer versions of software compatible with older versions?
Lack of compatibility between old and new versions of software is a common problem.
You can troubleshoot compatibility issues by viewing the software version to determine
if you are using an outdated version of the software.
Sometimes updating software to a newer version will resolve compatibility issues.
Some software is backwards compatible.
If a program or application is backwards compatible, then the older versions of files, programs,
and systems will work properly with newer versions.
In this video, you learned that:
Version numbers indicate the history of changes, updates, and patches to software,
Some version numbers follow the semantic numbering system and have 4 parts separated by a period,
Compatibility with old and new versions of software is a common problem,
and you should view the version of the software you are using to determine software compatibility.