0
00:00:06,799 --> 00:00:10,120
Welcome to “What Is Software Engineering.”

1
00:00:10,120 --> 00:00:16,420
After watching this video, you will be able to define software engineering, list the responsibilities

2
00:00:16,420 --> 00:00:24,279
of a software engineer, and compare and contrast software developers and software engineers.

3
00:00:24,279 --> 00:00:29,699
Software engineering is the application of scientific principles to the design and creation

4
00:00:29,699 --> 00:00:30,939
of software.

5
00:00:30,939 --> 00:00:36,050
The field uses a systematic approach to collect and analyze business requirements in order

6
00:00:36,050 --> 00:00:42,600
to design, build, and test software applications to satisfy those business requirements.

7
00:00:42,600 --> 00:00:49,370
When computing began in the late 1950s, software engineering was a relatively undefined discipline,

8
00:00:49,370 --> 00:00:53,780
but over time it transformed into a modernized engineering field.

9
00:00:53,780 --> 00:01:00,019
The software engineering field became a discipline in the 1960s and evolved as new technologies

10
00:01:00,019 --> 00:01:04,970
were developed and the approach to software development became more scientific.

11
00:01:04,970 --> 00:01:10,210
Trends in software engineering transformed from ad hoc programming towards more formal

12
00:01:10,210 --> 00:01:11,930
and standardized methods.

13
00:01:11,930 --> 00:01:17,370
Initially, the creation of software lacked a formal development process.

14
00:01:17,370 --> 00:01:22,890
As the world widely adopted computers, software became increasingly integral to more aspects

15
00:01:22,890 --> 00:01:23,890
of life.

16
00:01:23,890 --> 00:01:28,920
The inefficiencies in the software development process made it difficult to meet the rapidly

17
00:01:28,920 --> 00:01:33,740
increasing demand for computing resources and complex software.

18
00:01:33,740 --> 00:01:39,460
This led to what is known as the “Software Crisis” which began in the mid-1960s and

19
00:01:39,460 --> 00:01:42,550
lasted until the mid-1980s.

20
00:01:42,550 --> 00:01:48,260
During this period, software development often ran over budget, behind schedule, and consisted

21
00:01:48,260 --> 00:01:50,990
of unmanageable, buggy code.

22
00:01:50,990 --> 00:01:56,620
By the time older software solutions came to fruition, newer, better, and faster technologies

23
00:01:56,620 --> 00:02:02,050
had already been developed, causing software engineers to have to refactor their code,

24
00:02:02,050 --> 00:02:05,160
or completely redesign their system.

25
00:02:05,160 --> 00:02:09,640
Often software development solutions that worked for small software systems did not

26
00:02:09,640 --> 00:02:13,370
scale to large, complex projects.

27
00:02:14,370 --> 00:02:18,930
Some of these issues still exist today, although to a much lesser extent due to the consistent

28
00:02:18,930 --> 00:02:24,370
application of engineering principles to the software development process.

29
00:02:24,370 --> 00:02:29,530
Computing resources have become more widely available and standardized methodologies for

30
00:02:29,530 --> 00:02:33,860
software development allow for large, complex solutions that scale.

31
00:02:33,860 --> 00:02:39,540
The solution to the “Software Crisis” involved transforming unorganized coding efforts

32
00:02:39,540 --> 00:02:42,850
into an established engineering discipline.

33
00:02:42,850 --> 00:02:48,270
The mid 1980s also saw a rise in the growth of computer-aided software engineering or

34
00:02:48,270 --> 00:02:52,520
CASE which also helped to relieve the software crisis.

35
00:02:52,520 --> 00:02:58,311
CASE tools can be divided into six categories: business analysis and modeling, development

36
00:02:58,311 --> 00:03:05,260
tools such as debugging environments, verification and validation tools, configuration management,

37
00:03:05,260 --> 00:03:09,640
metrics and measurement, and project management.

38
00:03:09,640 --> 00:03:14,910
The term “software engineer” is often used interchangeably with software developer

39
00:03:14,910 --> 00:03:17,610
but there are subtle differences.

40
00:03:17,610 --> 00:03:22,319
Software engineers are also developers, but the term “software developer” is usually

41
00:03:22,319 --> 00:03:26,260
deemed narrower in scope than that of a software engineer.

42
00:03:26,260 --> 00:03:30,890
A software engineer’s knowledge is usually broader.

43
00:03:30,890 --> 00:03:35,140
Software engineers take a systematic, big picture approach in their thinking to software

44
00:03:35,140 --> 00:03:40,140
development whereas developers may have more creative approaches.

45
00:03:40,140 --> 00:03:46,000
Both software engineers and software developers have specialized knowledge, but software engineers

46
00:03:46,000 --> 00:03:51,650
use that knowledge to build entire systems whereas software developers use their knowledge

47
00:03:51,650 --> 00:03:57,050
to write code to implement specific functionality within a system.

48
00:03:57,050 --> 00:04:01,770
Software engineers are often employed on larger scale projects and they are focused on the

49
00:04:01,770 --> 00:04:06,010
broad structure rather than solving an immediate problem.

50
00:04:06,010 --> 00:04:12,950
Software engineers are tasked with designing, building, and maintaining software systems.

51
00:04:12,950 --> 00:04:17,959
Responsibilities include writing and testing code, and consulting with stakeholders such as

52
00:04:17,959 --> 00:04:24,259
clients, third party software vendors, security specialists, and other team members.

53
00:04:24,259 --> 00:04:28,979
The adoption of a measured, scientific approach to software development has influenced the

54
00:04:28,979 --> 00:04:32,069
way software is created and designed.

55
00:04:32,069 --> 00:04:37,080
Today, the development process is typically guided by the Software Development Lifecycle

56
00:04:37,080 --> 00:04:38,080
or SDLC.

57
00:04:38,080 --> 00:04:44,520
The SDLC identifies the steps needed to develop high-quality software.

58
00:04:44,520 --> 00:04:49,990
Later in this module, we will discuss the SDLC, the traits of high-quality software,

59
00:04:49,990 --> 00:04:54,770
and roles common in the field of software engineering.

60
00:04:54,770 --> 00:04:57,419
In this video you learned that:

61
00:04:57,419 --> 00:05:03,620
Software engineering is the systematic approach to design and development of software.

62
00:05:03,620 --> 00:05:06,020
Responsibilities of a software engineer include:

63
00:05:06,020 --> 00:05:09,120
Designing, building, and maintaining software systems,

64
00:05:09,120 --> 00:05:11,889
writing and testing code, and

65
00:05:11,889 --> 00:05:16,789
consulting with stakeholders, third party vendors, security specialists, and other team

66
00:05:16,789 --> 00:05:19,009
members. And finally,

67
00:05:19,009 --> 00:05:24,419
software engineers build systems while software developers implement specific functionalities.

