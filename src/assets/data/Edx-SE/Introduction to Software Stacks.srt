0
00:00:05,600 --> 00:00:11,680
Welcome to Introduction to Software Stacks.After watching this video, you will be able to

1
00:00:11,680 --> 00:00:14,160
describe software stack terminology,

2
00:00:14,160 --> 00:00:17,280
identify some commonly used software stacks,

3
00:00:17,280 --> 00:00:21,200
and list the benefits and challenges of different software stacks.

4
00:00:22,240 --> 00:00:26,960
A software stack is a combination of technologies that includes software and

5
00:00:26,960 --> 00:00:33,440
programming languages. Developers use a software stack to create applications and solutions such as

6
00:00:33,440 --> 00:00:39,280
web and mobile apps. The set of individual technologies is stacked in a hierarchy and

7
00:00:39,280 --> 00:00:44,560
work together to support the execution of an application. The higher levels in the stack

8
00:00:44,560 --> 00:00:50,480
provide tasks or services for the user and the lower levels interact with the computer hardware.

9
00:00:51,440 --> 00:00:53,760
Software stacks typically include:

10
00:00:53,760 --> 00:00:59,760
Front-end technologies such as programming languages, frameworks, and user interface tools.

11
00:00:59,760 --> 00:01:03,440
And back-end technologies such as programming languages,

12
00:01:03,440 --> 00:01:10,080
frameworks, web servers, app servers, operating systems, messaging applications, and databases.

13
00:01:10,880 --> 00:01:16,160
You might hear the term technology stack used in place of software stack. However,

14
00:01:16,160 --> 00:01:21,600
a technology stack is a broader term that includes hardware and infrastructure like

15
00:01:21,600 --> 00:01:27,520
virtual machines, containers, storage, and load balancers, as well as the software stack.

16
00:01:28,400 --> 00:01:33,760
The simplest implementation of a software stack consists of a presentation layer,

17
00:01:33,760 --> 00:01:40,960
a business logic layer, and a data layer. However, more complex applications use more complex stacks,

18
00:01:40,960 --> 00:01:44,960
which could include software for virtualization, scheduling and

19
00:01:44,960 --> 00:01:50,880
orchestration, runtime environments, database connectivity, networking, and security.

20
00:01:51,600 --> 00:01:57,120
The software and services that make up a stack can be from a variety of sources:

21
00:01:57,120 --> 00:02:01,520
from internal resources, to third party providers, to cloud providers.

22
00:02:02,160 --> 00:02:08,400
There’s no formal definition of the structure of a stack, the only rule being that the software and

23
00:02:08,400 --> 00:02:13,840
services included must support an application’s development, functionality, or deployment.

24
00:02:14,560 --> 00:02:19,440
When you’re using a software stack, you don’t have to use all of the available layers,

25
00:02:19,440 --> 00:02:23,200
you only need to use those which are relevant to your solution.

26
00:02:24,080 --> 00:02:27,440
There are many different examples of software stacks,

27
00:02:27,440 --> 00:02:32,720
The Python-Django stack, uses the popular Python programming language alongside the

28
00:02:32,720 --> 00:02:39,200
Django web framework. This combination is all open source and commonly used for large-scale,

29
00:02:39,200 --> 00:02:41,200
fast-changing web applications.

30
00:02:42,000 --> 00:02:46,960
The Ruby on Rails stack, uses the Ruby programming language with a server-side

31
00:02:46,960 --> 00:02:53,840
web application framework. Ruby on Rails is great with JSON or XML for data transfer

32
00:02:53,840 --> 00:02:58,560
and HTML, CSS, and JavaScript for front-end development.

33
00:02:59,360 --> 00:03:06,720
And the ASP.NET stack includes Microsoft technologies such as the ASP.NET MVC

34
00:03:06,720 --> 00:03:12,080
framework, the IIS web server, SQL Server, and Azure.

35
00:03:12,080 --> 00:03:18,160
You’ll learn more about the LAMP, MEAN, MEVN, and MERN stacks next.

36
00:03:18,160 --> 00:03:25,200
The LAMP stack runs on the Linux operating system. It uses the Apache HTTP or Web server,

37
00:03:25,200 --> 00:03:32,080
MySQL databases, and the PHP programming language. LAMP is an example of an early

38
00:03:32,080 --> 00:03:37,200
incarnation of a software stack designed for building websites and cloud applications.

39
00:03:37,840 --> 00:03:43,280
All its constituent parts are open source and loosely coupled, so it’s easy to swap

40
00:03:43,280 --> 00:03:49,600
different options into the stack. For example, you could choose to use PostgreSQL instead of

41
00:03:49,600 --> 00:03:55,600
MySQL for your database server, changing the LAMP stack to be the LAPP stack.

42
00:03:56,160 --> 00:04:00,800
Similarly, you could use the Python programming language instead of PHP.

43
00:04:01,680 --> 00:04:08,720
The MEAN stack uses a MongoDB database with an Express.js web application server framework,

44
00:04:08,720 --> 00:04:12,880
the Angular.js framework for front-end JavaScript development,

45
00:04:12,880 --> 00:04:16,320
and the Node.js platform for server-side scripting.

46
00:04:17,040 --> 00:04:22,160
The MEAN software and services are platform agnostic, free, and open source.

47
00:04:23,200 --> 00:04:26,800
There are other stacks related to the MEAN stack, including:

48
00:04:26,800 --> 00:04:30,880
The MERN stack which replaces Angular.js with React,

49
00:04:30,880 --> 00:04:34,960
and is a flexible and high-performing framework for developing front-ends.

50
00:04:35,520 --> 00:04:43,760
And the MEVN stack which replaces Angular.js with Vue.js. Vue is a lighter-weight JavaScript

51
00:04:43,760 --> 00:04:48,960
framework with less capabilities, but it can provide better performance than Angular.js.

52
00:04:49,920 --> 00:04:55,680
Let’s consider some advantages and disadvantages of three different software stacks:

53
00:04:55,680 --> 00:04:59,120
MEAN, MVEN, and LAMP.

54
00:04:59,120 --> 00:05:05,600
MEAN is a free and open-source JavaScript software stack used for building web applications. The

55
00:05:05,600 --> 00:05:11,600
biggest advantage of the MEAN stack is that all of the parts use JavaScript, so developers only

56
00:05:11,600 --> 00:05:18,000
need to know a single language. The stack is also open source which means the cost is lucrative to

57
00:05:18,000 --> 00:05:24,720
businesses and there is a lot of documentation and re-usable code for developers to use. Development

58
00:05:24,720 --> 00:05:31,600
can happen quickly because Node.js has a huge collection of free, reusable module libraries.

59
00:05:31,600 --> 00:05:36,240
However, the MEAN stack may not be well-suited for large-scale applications.

60
00:05:37,040 --> 00:05:43,360
When using Express.js, the business logic often resides on the server preventing the reuse

61
00:05:43,360 --> 00:05:50,080
of some services like batching operations. And MongoDB is great for unstructured data,

62
00:05:50,080 --> 00:05:54,640
but it doesn’t provide the same level of functionality as a relational database.

63
00:05:55,440 --> 00:05:59,040
The MEVN stack is a web stack like MEAN,

64
00:05:59,040 --> 00:06:04,160
but it uses Vue.js instead of Angular.js for user interfaces.

65
00:06:04,800 --> 00:06:08,640
MEVN and MEAN stacks have similar advantages,

66
00:06:08,640 --> 00:06:15,360
but Vue.js is a much newer technology and doesn't have as many reusable libraries as Angular.js.

67
00:06:16,160 --> 00:06:23,280
Like MEAN and MEVN, the software and services in the LAMP stack are open source meaning there are

68
00:06:23,280 --> 00:06:29,520
lots of reusable chunks of code available to the developers. And because LAMP is one of the oldest

69
00:06:29,520 --> 00:06:36,000
software stacks it’s easy to find support and reusable solutions. However, because the Linux

70
00:06:36,000 --> 00:06:42,400
operating system is an integral part of the stack, it isn’t as flexible as MEAN and MEVN

71
00:06:42,400 --> 00:06:50,160
which are platform agnostic. MySQL is a relational database, so the stack cannot take advantage of

72
00:06:50,160 --> 00:06:56,800
unstructured data. The other disadvantage of the LAMP stack is that the back-end runs on PHP, Perl,

73
00:06:56,800 --> 00:07:03,680
or Python, whereas the front-end uses JavaScript and HTML, making it harder for developers to

74
00:07:03,680 --> 00:07:09,760
switch back and forth than the MEAN and MEVN stacks which use JavaScript throughout.

75
00:07:11,120 --> 00:07:13,280
In this video, you learned that:

76
00:07:13,280 --> 00:07:18,720
Software stacks are a combination of technologies for creating applications and solutions.

77
00:07:19,360 --> 00:07:24,320
Software stacks can range from simple three-layered systems to many layers.

78
00:07:24,320 --> 00:07:29,680
There are numerous types of software stacks for different developers and environments.

79
00:07:29,680 --> 00:07:35,040
The biggest advantage of the MEAN stack is that all of the parts use JavaScript,

80
00:07:35,040 --> 00:07:38,160
so developers only need to know a single language.

81
00:07:38,880 --> 00:07:43,840
And, the LAMP stack on Linux works well for  relational data.

