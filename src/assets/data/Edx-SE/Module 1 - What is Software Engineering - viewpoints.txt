Welcome to Insidersâ€™ Viewpoints: What is software engineering? In this video,
we will hear from experts discussing software engineering.
I think software engineering is the process of using programming languages and engineering
principles to build products. These products could look like web apps, mobile apps, dekstop
apps, operating systems, or even networking systems. It is a skill that's integral to
the success of our modern society. Because without technology, we couldn't get a lot
of things done today. Within software engineering. It's a very broad term. And so within software
engineering, you have roles such as front end, back end security, mobile test, full
stack, DevOps, cloud data, and machine learning. And these are all different types of engineers
within software engineering.
I would define software engineering as building and improving software from anywhere from
design architecture to the user interface to fixing small bugs. So anything that falls
in that range, that's what software engineers or software engineers do
So software engineering, to me, I think really has to do with, I consider it a creative process.
And it's fundamentally is the practice of designing, envisioning implementing, and then
supporting and maintaining software through the full lifecycle of it. So not just writing
code, but, you know, thinking about the software you're building before you even written a
line of code, the the the journey from idea inception to, to actual implementation and
launching upset software and then maintaining it, improving it, supporting it, and potentially
evolving into something else. So it's very much a sort of creative and full, full lifecycle
end to end engineering process.
So I know in the United States, at least software engineering, software development programming
they all have, depending on who you ask, they mean very specific things or very hazy things
or very contradictory things. Or it's like why do we even have three different titles
for the same thing. I think of those titles is kind of all meaning the same thing.
RECORD NARRATION:
What s the difference between a software engineer and a developer?
Yeah, I think the difference for me, I consider engineering to be a little bit sort of broader
software engineer who broader than then development, I think development to me means is sort of
one part of the process. So I think one fundamental difference for me is I think software engineering
is beyond just writing code, which I think a developer often is handed a task to, to
write a piece of code, create a a module, piece of software, whatever term you want
to use, I think engineering involves sort of starting, you know, a very long time before
you even get to the development process and continues on beyond the time you would actually
take your code, deploy it. So this kind of goes into the full lifecycle.
In my opinion, there isn't A difference really. So for example, I was trained as a full stack
engineer or a full stack developer, but I was hired as a software engineer to work on
the front end of the company's application. So I think it's a matter of semantics. And
a lot of it, I think, is a lot of gatekeeping. To keep people who don't know anything about
us about the industry out. Somebody who has studied CS may argue differently from IBM
from ideal, but as a person with a non traditional path into the world of software engineering,
I only see it as like title changes and title differences. And I think it depends on what
company you work in, and what company you work for. Because at the end of the day, we're
all using the same tools and technology to get the product shipped to production
. I think that they are pretty similar roles. They are used interchangeably a lot, I think.
But I think the main difference is that software engineers are also responsible for the system
design and architecture as well as data, how it's received, used, and how it's disseminated.
Whereas software developers, I think, focus more on the building of apps and features.
So, in Canada, being a computer programmer, or a software developer is incredibly different
than being a computer engineer or a software engineer, where to be an engineer, it means
you've taken specific classes in like codes of ethics. And you're held to the same ethical
standards as a civil engineer or a mechanical engineer. And so depending on where you are,
the name, the titles can mean very different things. And I know for purposes of immigration,
the titles also can mean very specific things. And you have to be careful about like, what
it is that you put down. But in job descriptions, I kind of see them all used interchangeably,
and I tend to just kind of think of them all as the same thing.
The, you know, it's much of a more of a longer time horizon, I think, in front in terms of
engineering versus development. I think there's a lot more considerations and hats you need
to put on throughout the software engineering lifecycle versus the kind of more narrowly
scoped development cycle.