(Music)
Welcome to the importance of back-end development.
A front-end developer creates websites and Cloud applications, using HTML, CSS and JavaScript
to create what the user sees and interacts with in the client software.
A back-end developer creates and manages all the resources that are needed to respond to
the requests that the user makes through the client.
The back-end developer’s tasks focus on enabling the server infrastructure, or back-end,
to process requests, supply data, and provide other services securely.
Front-end and back-end developers must work together very closely.
Each needs to understand the requirements of the solution and how their respective parts
will interact before the development process can begin.
Throughout the lifecycle of the website or Cloud app, front-end and back-end developers
collaborate to resolve issues and add functionality.
How does the work of a back-end developer affect you as you are browsing the internet
or using a Cloud app?
Think about it like this: when you’re shopping online, what happens to the data you enter?
Your login information, your product searches, your payment info?
The back-end processes all these things, and the back-end developers write and maintain
the parts of the application that process the inputs.
Let’s think about your experience as you explore an online shopping site and make a
purchase.
As you search for products, your search request is submitted to a web application which then
retrieves the data from a separate database and serves it back to the client for display.
To facilitate this, a back-end developer must understand the language that the web application
uses, how to query the database for the correct data, and how to bring the two together.
Even a simple task like navigating around the site can require the skills of a back-end
developer.
Many sites have restricted areas that are only available to users who have an account
and have logged in.
User account management, authentication and authorization can be the responsibility of
the back-end developer too.
Once you’ve decided what you want to purchase, you must add it to your cart and make a payment.
The purchase process requires you to submit sensitive information, such as your address
and credit card number, and the back-end developer must ensure that this data is securely handled
and stored.
Front-end client interactions, whether a request for data like an image, accepting input from
a user filling out a form, or securing sensitive information like a credit card number all
require different services from the back-end server.
Each request needs to interact with the back-end in a different way.
Back-end developers use APIs, routes, and endpoints to process incoming requests:
An API is code that works with data, usually using JSON or XML. APIs have set rules and
structure.
A route is a path to a website or page that the user interacts with.
Routes generally take user input and show results based on the input.
An endpoint may be an API or may simply be a path.
When a request from the front-end arrives at the back-end, it is routed to the correct
service.
If the backend has an end point defined for the request by using routing, the request
will be addressed and replied to.
If the end point is missing, the server returns a 404 error.
Back-end developers must create and maintain this server-side routing.
Along with backend APIs, routes effectively allow the front-end client to plug into the
correct socket at the back-end.
APIs provide a mechanism for Cloud apps, mobile apps, and other types of software to access
resources from the back-end.
To perform all this back-end development you will need to be familiar with at least one
back-end language, and its associated frameworks.
Among the most popular languages today is JavaScript, which was originally designed
to run in web browsers, adding extra interactivity and dynamic content to web pages.
JavaScript is also being used on the back-end, with new releases adding server-side functionality.
JavaScript has many frameworks, but two of the most well-known are Node.js and Express.
Python is another popular language; it’s very flexible and easy to learn. Python has
wide functionality – it can be used for everything from creating web pages to connecting
to a database, to performing data analysis.
Two well-known Python frameworks are Django and Flask.
Back-end developers often work with data and databases, so you will also benefit from learning
some SQL.
To help handle requests from databases, back-end developers can use object-relational mapping
tools (ORM) to connect to the database and retrieve the correct data.
Although an ORM can hide some of the complexity of querying databases, it’s useful to understand
the fundamentals of databases so that you can troubleshoot any issues that arise.
The day-to-day tasks of a back-end developer focus on the behind the scenes functionality
that keeps websites, cloud apps and mobile apps up and running.
Back-end development covers a wide range of technologies, from managing user accounts,
authentication and authorization to ensuring that sensitive data is stored and transferred
securely.
Back-end developers also work with databases, retrieving , processing and storing data as
required.
Life for a back-end developer is varied, challenging, and ever changing.