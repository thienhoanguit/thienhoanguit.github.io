0
00:00:00,000 --> 00:00:09,309
(Music)

1
00:00:09,309 --> 00:00:13,990
When you’re starting out as a Web Developer, it can be difficult to determine what you

2
00:00:13,990 --> 00:00:17,610
need to learn and what order you should learn it in.

3
00:00:17,610 --> 00:00:20,440
Understanding how the websites that you’re already familiar with are constructed and

4
00:00:20,440 --> 00:00:23,199
delivered to you is a good starting point.

5
00:00:23,199 --> 00:00:27,810
Let’s review the basics of how you interact with a website.

6
00:00:27,810 --> 00:00:31,119
You launch an internet browser – there are lots available:

7
00:00:31,119 --> 00:00:38,150
Google Chrome, Microsoft Edge, Mozilla Firefox, and Apple Safari are some of the most popular.

8
00:00:38,150 --> 00:00:46,500
The browser has an address bar, into which you enter a URL, like www.IBM.com.

9
00:00:46,500 --> 00:00:51,160
The browser then contacts the server with the name and requests the information that

10
00:00:51,160 --> 00:00:53,030
makes up the website.

11
00:00:53,030 --> 00:00:58,180
The server then sends a response, which contains the data that the client requires to display

12
00:00:58,180 --> 00:01:00,170
the website.

13
00:01:00,170 --> 00:01:02,909
For most websites, the server will return:

14
00:01:02,909 --> 00:01:07,720
HTML, which defines the structure of the page, but doesn’t look very attractive

15
00:01:07,720 --> 00:01:15,380
CSS, which adds styles and flair to the page and JavaScript, which adds interactivity and

16
00:01:15,380 --> 00:01:18,000
dynamic content.

17
00:01:18,160 --> 00:01:22,780
Content displayed by websites can contain elements that are either previously stored

18
00:01:22,780 --> 00:01:28,999
on the server (called “static”) or generated each time they are requested by the client

19
00:01:28,999 --> 00:01:31,700
(called “dynamic”).

20
00:01:31,700 --> 00:01:36,689
Dynamic elements can involve information coming from other systems and applications, such

21
00:01:36,689 --> 00:01:38,100
as databases.

22
00:01:38,240 --> 00:01:45,200
Most websites contain static and dynamic elements to provide the best user experience.

23
00:01:45,200 --> 00:01:50,049
Cloud Applications are similar to Websites in that they request content that a server

24
00:01:50,049 --> 00:01:51,319
returns.

25
00:01:51,319 --> 00:01:57,140
Cloud Apps are built to work seamlessly with a Cloud-based back-end infrastructure, Cloud-based

26
00:01:57,140 --> 00:02:03,139
data storage and data processing, and other Cloud services, making them very scalable

27
00:02:03,139 --> 00:02:06,090
and very resilient.

28
00:02:06,090 --> 00:02:11,310
The environment for building websites and Cloud Applications is divided into two primary

29
00:02:11,310 --> 00:02:12,920
areas:

30
00:02:12,920 --> 00:02:14,860
front-end and back-end.

31
00:02:14,860 --> 00:02:20,060
The front-end deals with everything that happens at the client-side, everything the user

32
00:02:20,060 --> 00:02:22,640
can see and interact with.

33
00:02:22,640 --> 00:02:29,350
You can choose to specialize in front-end coding, using HTML, CSS, JavaScript and related

34
00:02:29,350 --> 00:02:32,310
frameworks, libraries, and tools.

35
00:02:32,310 --> 00:02:37,400
The back-end deals with everything that happens on the server before the code and data are

36
00:02:37,400 --> 00:02:39,750
sent to the client.

37
00:02:39,750 --> 00:02:44,709
The back-end coding usually handles the logic and functionality that make the website or

38
00:02:44,709 --> 00:02:50,720
app work, and the authentication processes that keep data secure.

39
00:02:50,960 --> 00:02:57,500
Back-end developers may also work with relational or noSQL databases, even collaborating with

40
00:02:57,500 --> 00:03:01,260
database administrators in bigger projects.

41
00:03:01,260 --> 00:03:07,849
Full-stack developers have skills, knowledge, and experience in both front-end and back-end

42
00:03:07,849 --> 00:03:09,439
environments.

43
00:03:09,439 --> 00:03:14,340
Whichever way you choose to specialize, you will need the appropriate tools to help you

44
00:03:14,340 --> 00:03:15,340
work.

45
00:03:15,340 --> 00:03:19,980
The first tool most developers add to their resources is a code editor.

46
00:03:20,180 --> 00:03:26,160
Developers also need tools to integrate, build, compile, and debug code.

47
00:03:26,170 --> 00:03:32,159
Integrated Development Environments or IDEs incorporate some of these additional capabilities

48
00:03:32,160 --> 00:03:37,820
beyond just code editing and make it easier to build and manage your code.

49
00:03:38,000 --> 00:03:44,140
Good IDEs support multiple languages and integrate with management and storage tools like Git

50
00:03:44,140 --> 00:03:45,540
and GitHub.

51
00:03:45,540 --> 00:03:50,079
Other useful features are custom extensions and themes for supporting your working style

52
00:03:50,079 --> 00:03:51,720
and environment.

53
00:03:51,720 --> 00:03:59,950
Examples for code editors and IDEs include Sublime Text, Atom, Vim, VS Code, Visual Studio,

54
00:03:59,950 --> 00:04:03,319
Eclipse and NetBeans.

55
00:04:03,319 --> 00:04:05,730
In this brief overview, you learned about:

56
00:04:05,730 --> 00:04:09,319
The basic communication between client and servers.

57
00:04:09,319 --> 00:04:12,150
How websites are built and displayed,

58
00:04:12,150 --> 00:04:16,340
Front-end development is about what happens on the client side,

59
00:04:16,340 --> 00:04:19,680
Back-end development is about what happens on the server,

60
00:04:19,680 --> 00:04:24,330
Full-stack development incudes both front-end and back-end development,

61
00:04:24,330 --> 00:04:29,660
IDEs will help you create and manage your code.

