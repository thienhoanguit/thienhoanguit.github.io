Welcome to Insidersâ€™ Viewpoints: Job Roles in Software Engineering Teams.
In this video we will hear from experts discussing the various job roles you can expect to work
with on your Software Engineering team.
On the engineering team I worked with, we had a product manager, we had a tech lead,
we had a QA, we had a few QA analysts or test engineers.
And we also had access to UX designers.
And so the product manager ensured that we were on task and on track to deliver the features
that we said we were going to build according to the business needs, that way we're not
left behind.
.
Yeah, I think, in my experience, the roles that the software engineers would interact
with the most, I think would, you know, in no particular order product managers, so the
folks who are actually sort of working with the sales teams, the marketing teams, figuring
out what actually needs to be built, what our customer needs, what are innovations and
ideas that, you know, looking forward, that we might, you might want to invest in and
build out.
We asked our experts to describe these job roles in software engineering teams in further
detail
I think software engineering these days, as it becomes more and more, more more and more
large scale, more complex more systems at play.
More considerations, there's just a lot of things to consider in today's in today's world
as a software engineer, so you often work with a project or program manager who helps
you set up your your your timelines, helps you ensure you're meeting your goals, helps
you unblock yourself helps you keep your stakeholders community up to date with what is what is
happening with your project.
So there's just a lot of pieces involved.
And I think project and program managers really are there to help tie it all together.
So the product manager would always act someone like a scrum master.
So like, we would have stand ups.
And we would talk about the tickets that we had in JIRA.
And it was it was like, okay, so what are you working on?
What do you need help with?
And are there any issues.
And during that process, the product manager does ensure that we were on task and on track,
and if we had any issues, he would help us to resolve it with the QA engineers or the
testers.
You'll have a software engineer who's more focused on the architecture and they can keep
the the big picture in their brain more easily.
And then some software engineers who are more than nitty gritty, I'm sitting down and I
am writing code and my my job is to like, turn business logic into computer logic.
And some companies have those all split out as different roles.
I think software engineers, and then these roles that the more they're embedded and work
closely together and actually collaborate as part of a single team.
versus handing off things in a more waterfall approach.
I think that that's generally the the best way, or was one of the most effective ways
is to actually work together as much as possible regular check ins, actually having, you know,
brainstorming sessions, group chats that involve all the various folks, all the roles, I think,
close collaboration, there is super key
And at some companies, all the different hats have their own titles.
So you might be talking to a software engineer who's actually doing more kind of DevOps infrastructure
building, monitoring and alerting kinds of work.
And then there's a software engineer who's also doing QA work.
And they're the ones who are focusing on pipelines and continuous continuous development, continuous
integration type projects, working on getting test suites and automation all set up.
In terms of working with the UX designer or the UX engineer, they would give me like specific
specs from figma.
In order to meet the certain specifications of the business, it's let's say, we're building
a checkout page.
So the UX UX designer would design the spec page and figma and then deliver that spec
to me, and then I would code it according to the design.
UX designers who actually come up with it, if you work, if you're working on an engineering
or user interface, you work with UX designers to, to essentially from the moment of sketching
out sort of a, you know, a draft on paper or whiteboard of an idea all the way down
to working with them on mocks and implementing the mocks iterating.
On those UX researchers often are worked with when you actually need to go out and do research
and market and interview your partners or customers to get sort of as real time as possible.
And just, you know, real feedback from real users of your, of your software.
So once I code something, I get it reviewed by my tech lead or my senior engineer, it
would go to QA for them to test the application to ensure that whatever I did or implemented,
didn't break anything.
If something is broken, that I didn't catch, the QA tester would write up like a test plan
or would do like a detailed testing document.
That way I understood exactly what needed to be resolved.
And I would resolve it, and then go back to the QA person and say, Hey, this is fixed,
can you take a look at it again, and they would tell me whether or not it's fixed and
whether or not something else was broken, which often happens with code.
So you know, you generally work a lot with product managers, because you need to know
what to build.
And they generally give you a lot of guidance on, on what they want to build, and you collaborate
with them in terms of how to build it and discuss trade offs and timelines, and expectations.
So it's a very much a collaborative process.
Typically, I have found that I interact most with product owners.
So either at some places, it's been a customer who works inside the company.
And so I go to them quite frequently for questions on clarifying refinements for getting test
schedules up and running for figuring out pain points and trying to optimize their workflow
workflows using technology to support them.
Software engineers work often with site reliability engineers, or sis admins is maybe there, the
role could be called to actually maintain and help run the software and deploy it and
actually get it running somewhere that's not on your desktop, you often work with more
dedicated test engineers who are responsible for end to end testing, automated testing,
integration testing, at all, at all points of the lifecycle.
So as an engineer, you're never alone.
You're never working alone.
It's just a matter of like knowing how to communicate directly with the people on your
team