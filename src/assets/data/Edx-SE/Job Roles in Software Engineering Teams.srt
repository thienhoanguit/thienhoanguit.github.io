0
00:00:05,740 --> 00:00:11,350
Welcome to Insidersâ€™ Viewpoints: Job Roles in Software Engineering Teams.

1
00:00:11,350 --> 00:00:16,529
In this video we will hear from experts discussing the various job roles you can expect to work

2
00:00:16,529 --> 00:00:20,230
with on your Software Engineering team.

3
00:00:20,230 --> 00:00:26,810
On the engineering team I worked with, we had a product manager, we had a tech lead,

4
00:00:26,810 --> 00:00:31,029
we had a QA, we had a few QA analysts or test engineers.

5
00:00:31,029 --> 00:00:34,140
And we also had access to UX designers.

6
00:00:34,140 --> 00:00:39,379
And so the product manager ensured that we were on task and on track to deliver the features

7
00:00:39,379 --> 00:00:43,420
that we said we were going to build according to the business needs, that way we're not

8
00:00:43,420 --> 00:00:44,420
left behind.

9
00:00:44,420 --> 00:00:45,420
.

10
00:00:45,420 --> 00:00:52,860
Yeah, I think, in my experience, the roles that the software engineers would interact

11
00:00:52,860 --> 00:00:59,420
with the most, I think would, you know, in no particular order product managers, so the

12
00:00:59,420 --> 00:01:05,850
folks who are actually sort of working with the sales teams, the marketing teams, figuring

13
00:01:05,850 --> 00:01:10,280
out what actually needs to be built, what our customer needs, what are innovations and

14
00:01:10,280 --> 00:01:15,399
ideas that, you know, looking forward, that we might, you might want to invest in and

15
00:01:15,399 --> 00:01:16,670
build out.

16
00:01:16,670 --> 00:01:21,719
We asked our experts to describe these job roles in software engineering teams in further

17
00:01:21,719 --> 00:01:22,719
detail

18
00:01:22,719 --> 00:01:29,310
I think software engineering these days, as it becomes more and more, more more and more

19
00:01:29,310 --> 00:01:32,520
large scale, more complex more systems at play.

20
00:01:32,520 --> 00:01:37,359
More considerations, there's just a lot of things to consider in today's in today's world

21
00:01:37,359 --> 00:01:41,210
as a software engineer, so you often work with a project or program manager who helps

22
00:01:41,210 --> 00:01:47,109
you set up your your your timelines, helps you ensure you're meeting your goals, helps

23
00:01:47,109 --> 00:01:52,939
you unblock yourself helps you keep your stakeholders community up to date with what is what is

24
00:01:52,939 --> 00:01:55,450
happening with your project.

25
00:01:55,450 --> 00:01:57,200
So there's just a lot of pieces involved.

26
00:01:57,200 --> 00:02:02,170
And I think project and program managers really are there to help tie it all together.

27
00:02:02,170 --> 00:02:06,350
So the product manager would always act someone like a scrum master.

28
00:02:06,350 --> 00:02:08,200
So like, we would have stand ups.

29
00:02:08,200 --> 00:02:11,090
And we would talk about the tickets that we had in JIRA.

30
00:02:11,090 --> 00:02:14,250
And it was it was like, okay, so what are you working on?

31
00:02:14,250 --> 00:02:15,600
What do you need help with?

32
00:02:15,600 --> 00:02:17,640
And are there any issues.

33
00:02:17,640 --> 00:02:21,730
And during that process, the product manager does ensure that we were on task and on track,

34
00:02:21,730 --> 00:02:25,810
and if we had any issues, he would help us to resolve it with the QA engineers or the

35
00:02:25,810 --> 00:02:26,810
testers.

36
00:02:26,810 --> 00:02:30,500
You'll have a software engineer who's more focused on the architecture and they can keep

37
00:02:30,500 --> 00:02:34,830
the the big picture in their brain more easily.

38
00:02:34,830 --> 00:02:38,760
And then some software engineers who are more than nitty gritty, I'm sitting down and I

39
00:02:38,760 --> 00:02:46,480
am writing code and my my job is to like, turn business logic into computer logic.

40
00:02:46,480 --> 00:02:50,120
And some companies have those all split out as different roles.

41
00:02:50,120 --> 00:02:54,900
I think software engineers, and then these roles that the more they're embedded and work

42
00:02:54,900 --> 00:02:59,360
closely together and actually collaborate as part of a single team.

43
00:02:59,360 --> 00:03:03,030
versus handing off things in a more waterfall approach.

44
00:03:03,030 --> 00:03:08,790
I think that that's generally the the best way, or was one of the most effective ways

45
00:03:08,790 --> 00:03:15,450
is to actually work together as much as possible regular check ins, actually having, you know,

46
00:03:15,450 --> 00:03:21,980
brainstorming sessions, group chats that involve all the various folks, all the roles, I think,

47
00:03:21,980 --> 00:03:24,490
close collaboration, there is super key

48
00:03:24,490 --> 00:03:28,480
And at some companies, all the different hats have their own titles.

49
00:03:28,480 --> 00:03:34,890
So you might be talking to a software engineer who's actually doing more kind of DevOps infrastructure

50
00:03:34,890 --> 00:03:38,159
building, monitoring and alerting kinds of work.

51
00:03:38,159 --> 00:03:42,900
And then there's a software engineer who's also doing QA work.

52
00:03:42,900 --> 00:03:48,830
And they're the ones who are focusing on pipelines and continuous continuous development, continuous

53
00:03:48,830 --> 00:03:54,280
integration type projects, working on getting test suites and automation all set up.

54
00:03:54,280 --> 00:04:00,600
In terms of working with the UX designer or the UX engineer, they would give me like specific

55
00:04:00,600 --> 00:04:03,510
specs from figma.

56
00:04:03,510 --> 00:04:08,780
In order to meet the certain specifications of the business, it's let's say, we're building

57
00:04:08,780 --> 00:04:10,630
a checkout page.

58
00:04:10,630 --> 00:04:16,650
So the UX UX designer would design the spec page and figma and then deliver that spec

59
00:04:16,650 --> 00:04:20,670
to me, and then I would code it according to the design.

60
00:04:20,670 --> 00:04:24,479
UX designers who actually come up with it, if you work, if you're working on an engineering

61
00:04:24,479 --> 00:04:31,020
or user interface, you work with UX designers to, to essentially from the moment of sketching

62
00:04:31,020 --> 00:04:37,330
out sort of a, you know, a draft on paper or whiteboard of an idea all the way down

63
00:04:37,330 --> 00:04:42,280
to working with them on mocks and implementing the mocks iterating.

64
00:04:42,280 --> 00:04:46,569
On those UX researchers often are worked with when you actually need to go out and do research

65
00:04:46,569 --> 00:04:53,380
and market and interview your partners or customers to get sort of as real time as possible.

66
00:04:53,380 --> 00:04:59,590
And just, you know, real feedback from real users of your, of your software.

67
00:04:59,590 --> 00:05:05,220
So once I code something, I get it reviewed by my tech lead or my senior engineer, it

68
00:05:05,220 --> 00:05:12,979
would go to QA for them to test the application to ensure that whatever I did or implemented,

69
00:05:12,979 --> 00:05:14,410
didn't break anything.

70
00:05:14,410 --> 00:05:19,439
If something is broken, that I didn't catch, the QA tester would write up like a test plan

71
00:05:19,439 --> 00:05:23,750
or would do like a detailed testing document.

72
00:05:23,750 --> 00:05:25,979
That way I understood exactly what needed to be resolved.

73
00:05:25,979 --> 00:05:30,280
And I would resolve it, and then go back to the QA person and say, Hey, this is fixed,

74
00:05:30,280 --> 00:05:33,960
can you take a look at it again, and they would tell me whether or not it's fixed and

75
00:05:33,960 --> 00:05:38,330
whether or not something else was broken, which often happens with code.

76
00:05:38,330 --> 00:05:43,120
So you know, you generally work a lot with product managers, because you need to know

77
00:05:43,120 --> 00:05:44,120
what to build.

78
00:05:44,120 --> 00:05:49,060
And they generally give you a lot of guidance on, on what they want to build, and you collaborate

79
00:05:49,060 --> 00:05:54,550
with them in terms of how to build it and discuss trade offs and timelines, and expectations.

80
00:05:54,550 --> 00:05:58,659
So it's a very much a collaborative process.

81
00:05:58,659 --> 00:06:06,009
Typically, I have found that I interact most with product owners.

82
00:06:06,009 --> 00:06:13,530
So either at some places, it's been a customer who works inside the company.

83
00:06:13,530 --> 00:06:22,819
And so I go to them quite frequently for questions on clarifying refinements for getting test

84
00:06:22,819 --> 00:06:28,990
schedules up and running for figuring out pain points and trying to optimize their workflow

85
00:06:28,990 --> 00:06:32,270
workflows using technology to support them.

86
00:06:32,270 --> 00:06:38,360
Software engineers work often with site reliability engineers, or sis admins is maybe there, the

87
00:06:38,360 --> 00:06:43,460
role could be called to actually maintain and help run the software and deploy it and

88
00:06:43,460 --> 00:06:48,689
actually get it running somewhere that's not on your desktop, you often work with more

89
00:06:48,689 --> 00:06:56,029
dedicated test engineers who are responsible for end to end testing, automated testing,

90
00:06:56,029 --> 00:07:01,099
integration testing, at all, at all points of the lifecycle.

91
00:07:01,099 --> 00:07:02,259
So as an engineer, you're never alone.

92
00:07:02,259 --> 00:07:04,069
You're never working alone.

93
00:07:04,069 --> 00:07:09,370
It's just a matter of like knowing how to communicate directly with the people on your

94
00:07:09,370 --> 00:07:09,490
team

