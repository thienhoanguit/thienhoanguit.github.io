0
00:00:05,410 --> 00:00:09,430
Welcome to the introduction to the software development life cycle.

1
00:00:09,430 --> 00:00:12,670
After watching this video, you will be able to

2
00:00:12,670 --> 00:00:15,950
describe what the software development life cycle is,

3
00:00:15,950 --> 00:00:18,090
explain its history, and

4
00:00:18,090 --> 00:00:21,160
discuss some key advantages of using it.

5
00:00:21,160 --> 00:00:25,130
The Software Development Life Cycle, known as the SDLC,

6
00:00:25,130 --> 00:00:31,490
is a systematic process to develop high-quality software in a predictable timeframe and budget.

7
00:00:31,490 --> 00:00:37,260
The goal of the SDLC is to produce software that meets a client’s business requirements.

8
00:00:37,260 --> 00:00:43,610
The SDLC defines phases of the software development process that encompass their own process and

9
00:00:43,610 --> 00:00:44,610
deliverables.

10
00:00:44,610 --> 00:00:50,309
It is a cycle of planning, design, and development that can be implemented as an iterative approach

11
00:00:50,309 --> 00:00:52,420
to software development.

12
00:00:52,420 --> 00:00:58,460
Adherence to the SDLC minimizes risks and costs to the development of high-quality,

13
00:00:58,460 --> 00:01:00,649
deployable software.

14
00:01:00,649 --> 00:01:05,930
The software development life cycle began to take shape in the mid-1960s as software

15
00:01:05,930 --> 00:01:11,630
development began to necessitate a more detailed approach because of its growing complexity.

16
00:01:11,630 --> 00:01:17,770
The SDLC led to a more deliberate approach as large corporations needed to manage complex

17
00:01:17,770 --> 00:01:22,520
business systems requiring heavy computational resources.

18
00:01:22,520 --> 00:01:26,750
In its initial conception, it used what is called the “waterfall method” to manage

19
00:01:26,750 --> 00:01:31,030
projects where the development of software follows a linear pattern through discrete

20
00:01:31,030 --> 00:01:32,350
stages.

21
00:01:32,350 --> 00:01:38,210
The SDLC has since been adapted, however, to more iterative methods in response to addressing

22
00:01:38,210 --> 00:01:41,239
customer needs and shifting requirements.

23
00:01:41,239 --> 00:01:47,640
Waterfall and other approaches to software development will be discussed in another lesson.

24
00:01:47,640 --> 00:01:52,460
There are some key advantages for businesses in following the SDLC.

25
00:01:52,460 --> 00:01:57,390
The first advantage is that it gives development teams a process to follow rather than using

26
00:01:57,390 --> 00:02:01,830
an ad hoc approach to improve efficiency and reduce risks.

27
00:02:01,830 --> 00:02:05,830
Secondly, there are discrete phases to the SDLC.

28
00:02:05,830 --> 00:02:11,920
Each phase is well defined so that team members know what they should be working on and when.

29
00:02:11,920 --> 00:02:16,690
The phases of the SDLC will be discussed in another video.

30
00:02:16,690 --> 00:02:21,850
Because of the well-defined phases, it facilitates communication between the customer, other

31
00:02:21,850 --> 00:02:24,860
stakeholders, and the development team.

32
00:02:24,860 --> 00:02:30,420
The SDLC offers an overview of the process, so stakeholders know where they fit in to

33
00:02:30,420 --> 00:02:31,920
that process.

34
00:02:31,920 --> 00:02:37,420
Also, since each phase is discrete, cross-domain teams know when they have completed their

35
00:02:37,420 --> 00:02:41,870
tasks and when development can move to the next phase.

36
00:02:41,870 --> 00:02:47,810
The SDLC provides room for iteration where, at the end of a cycle, the process can circle

37
00:02:47,810 --> 00:02:52,030
back to incorporate additional requirements as needed.

38
00:02:52,030 --> 00:02:56,620
Problem solving is incorporated early in the cycle so problems are addressed in a timely

39
00:02:56,620 --> 00:03:01,290
fashion and can be addressed in the design phase rather than during coding.

40
00:03:01,290 --> 00:03:07,700
Finally, each team member has a well-defined role which reduces conflict and overlapping

41
00:03:07,700 --> 00:03:10,500
responsibilities.

42
00:03:10,500 --> 00:03:12,690
In this video you learned that

43
00:03:12,690 --> 00:03:17,490
the SDLC provides a systematic process for software development.

44
00:03:17,490 --> 00:03:22,550
Its initial development in the 60s and 70s was driven by the need for a systematic approach

45
00:03:22,550 --> 00:03:26,220
because of the growing complexity of software.

46
00:03:26,220 --> 00:03:29,190
Key advantages of the SDLC include:

47
00:03:29,190 --> 00:03:35,160
A roadmap to the software development process, helping to reduce risk and improve efficiency,

48
00:03:35,160 --> 00:03:38,870
Increased communication between the team and stakeholders,

49
00:03:38,870 --> 00:03:43,910
Clearly defined and understood responsibilities for each team member, and

50
00:03:43,910 --> 00:03:50,960
The ability to be used iteratively, allowing for changing requirements.

